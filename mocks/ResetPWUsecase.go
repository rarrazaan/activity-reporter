// Code generated by mockery v2.14.1. DO NOT EDIT.

package mocks

import (
	dto "activity-reporter/shared/dto"
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// ResetPWUsecase is an autogenerated mock type for the ResetPWUsecase type
type ResetPWUsecase struct {
	mock.Mock
}

// ForgetPW provides a mock function with given fields: ctx, email
func (_m *ResetPWUsecase) ForgetPW(ctx context.Context, email string) (dto.ForgetPWRes, error) {
	ret := _m.Called(ctx, email)

	var r0 dto.ForgetPWRes
	if rf, ok := ret.Get(0).(func(context.Context, string) dto.ForgetPWRes); ok {
		r0 = rf(ctx, email)
	} else {
		r0 = ret.Get(0).(dto.ForgetPWRes)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, email)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewResetPWUsecase interface {
	mock.TestingT
	Cleanup(func())
}

// NewResetPWUsecase creates a new instance of ResetPWUsecase. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewResetPWUsecase(t mockConstructorTestingTNewResetPWUsecase) *ResetPWUsecase {
	mock := &ResetPWUsecase{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
